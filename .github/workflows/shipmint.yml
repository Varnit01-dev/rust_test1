name: Anchor Build, Test and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SOLANA_VERSION: "1.18.4"
  ANCHOR_VERSION: "0.30.1"
  NODE_VERSION: "18"
  NETWORK: "devnet"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Solana CLI v${{ env.SOLANA_VERSION }}
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Install Anchor v${{ env.ANCHOR_VERSION }}
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH # Ensure avm is in PATH
          avm install ${{ env.ANCHOR_VERSION }}
          avm use ${{ env.ANCHOR_VERSION }}
          echo "$HOME/.avm/evm-versions/${{ env.ANCHOR_VERSION }}/bin" >> $GITHUB_PATH # Ensure Anchor is in PATH

      - name: Install JavaScript Dependencies
        run: npm install

      - name: Build Program
        run: anchor build

      - name: Run Tests
        run: anchor test

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: program-artifacts
          path: |
            target/deploy/
            target/idl/
            Anchor.toml

  deploy-devnet:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: program-artifacts
          path: .

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Solana CLI v${{ env.SOLANA_VERSION }}
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Install Anchor v${{ env.ANCHOR_VERSION }}
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH # Ensure avm is in PATH
          avm install ${{ env.ANCHOR_VERSION }}
          avm use ${{ env.ANCHOR_VERSION }}
          echo "$HOME/.avm/evm-versions/${{ env.ANCHOR_VERSION }}/bin" >> $GITHUB_PATH # Ensure Anchor is in PATH

      - name: Configure Solana for Devnet
        run: |
          solana config set --url ${{ secrets.ANCHOR_PROVIDER_URL || 'https://api.devnet.solana.com' }}

      - name: Create Deploy Keypair
        run: |
          echo "${{ secrets.DEPLOY_KEYPAIR }}" | base64 -d > deploy-keypair.json
          chmod 600 deploy-keypair.json
          solana config set --keypair deploy-keypair.json
          solana-keygen pubkey deploy-keypair.json > deploy-pubkey.txt
          echo "Deployment Keypair Public Key: $(cat deploy-pubkey.txt)"

      - name: Airdrop Devnet SOL
        run: |
          # Airdrop 5 SOL to the deployer keypair.
          # Use || true to prevent job failure on airdrop rate limits.
          solana airdrop 5 $(cat deploy-pubkey.txt) --url ${{ secrets.ANCHOR_PROVIDER_URL || 'https://api.devnet.solana.com' }} || true
          echo "Current Balance:"
          solana balance $(cat deploy-pubkey.txt) --url ${{ secrets.ANCHOR_PROVIDER_URL || 'https://api.devnet.solana.com' }}

      - name: Deploy to Devnet
        run: |
          # Anchor will find the compiled programs and IDLs in target/deploy and target/idl
          # as artifacts were downloaded to the root ('.').
          anchor deploy --provider.cluster devnet --provider.wallet deploy-keypair.json

      - name: Verify Deployment and Log Program ID
        run: |
          echo "Deployment successful. Listing deployed programs:"
          anchor keys list
          echo "Solana Config after deployment:"
          solana config get

      - name: Cleanup Sensitive Files
        if: always() # Ensure cleanup runs even if deployment fails
        run: |
          rm -f deploy-keypair.json
          rm -f deploy-pubkey.txt