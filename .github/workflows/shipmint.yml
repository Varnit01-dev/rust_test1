name: Anchor Build, Test and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SOLANA_VERSION: "1.18.4"
  ANCHOR_VERSION: "0.30.1"
  NODE_VERSION: "18"
  NETWORK: "devnet"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Solana CLI
        run: sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"

      - name: Add Solana to PATH
        run: echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Install Anchor
        run: |
          cargo install avm --locked --force
          avm install ${{ env.ANCHOR_VERSION }}
          avm use ${{ env.ANCHOR_VERSION }}
          echo "~/.avm/bin" >> $GITHUB_PATH

      - name: Install JavaScript dependencies
        run: npm install

      - name: Build Program
        run: anchor build

      - name: Run Tests
        run: anchor test

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: solana-program-artifacts
          path: target/deploy/*

  deploy-devnet:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: solana-program-artifacts
          path: target/deploy

      - name: Install Solana CLI
        run: sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"

      - name: Add Solana to PATH
        run: echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Install Anchor
        run: |
          cargo install avm --locked --force
          avm install ${{ env.ANCHOR_VERSION }}
          avm use ${{ env.ANCHOR_VERSION }}
          echo "~/.avm/bin" >> $GITHUB_PATH

      - name: Configure Solana for Devnet
        run: solana config set --url ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}
        env:
          ANCHOR_PROVIDER_URL: ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}

      - name: Create Deploy Keypair
        run: |
          echo "${{ secrets.DEPLOY_KEYPAIR }}" > deploy-keypair.json
          chmod 600 deploy-keypair.json
          solana config set --keypair deploy-keypair.json

      - name: Airdrop Devnet SOL
        run: |
          MAX_RETRIES=10
          RETRY_DELAY=5
          AIRDROP_AMOUNT=2
          echo "Requesting airdrop of ${AIRDROP_AMOUNT} SOL to $(solana-keygen pubkey deploy-keypair.json)..."
          for i in $(seq 1 $MAX_RETRIES); do
              solana airdrop $AIRDROP_AMOUNT --url https://api.${{ env.NETWORK }}.solana.com || true # Allow airdrop to fail without stopping workflow
              sleep $RETRY_DELAY
              BALANCE=$(solana balance --url https://api.${{ env.NETWORK }}.solana.com | grep -oE '[0-9]+\.[0-9]+' | head -n 1)
              echo "Current balance: $BALANCE SOL"
              if (( $(echo "$BALANCE > 0.5" | bc -l) )); then
                  echo "Airdrop successful. Balance is sufficient."
                  break
              fi
              if [ "$i" -eq "$MAX_RETRIES" ]; then
                  echo "Airdrop failed after $MAX_RETRIES retries. Continuing anyway, deploy might fail due to insufficient funds."
              fi
          done
        env:
          ANCHOR_PROVIDER_URL: ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}

      - name: Deploy to Devnet
        id: deploy
        run: |
          DEPLOY_OUTPUT=$(anchor deploy --provider.cluster ${{ env.NETWORK }} --provider.wallet deploy-keypair.json)
          echo "$DEPLOY_OUTPUT"
          # Extract program ID from deploy output (example regex, might need adjustment based on anchor version)
          PROGRAM_ID=$(echo "$DEPLOY_OUTPUT" | grep 'Program Id:' | awk '{print $3}')
          if [ -z "$PROGRAM_ID" ]; then
              echo "Warning: Could not extract Program ID from deploy output. Check Anchor logs."
              # Try to get from target/deploy/<program_name>-keypair.json if it exists
              PROGRAM_ID=$(jq -r '.[0]' target/deploy/*-keypair.json 2>/dev/null || echo "")
          fi
          echo "DEPLOYED_PROGRAM_ID=$PROGRAM_ID" >> $GITHUB_ENV
        env:
          ANCHOR_PROVIDER_URL: ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}

      - name: Verify Deployment
        if: success() && env.DEPLOYED_PROGRAM_ID != ''
        run: |
          echo "Verifying deployment of program ID: ${{ env.DEPLOYED_PROGRAM_ID }}"
          solana program show ${{ env.DEPLOYED_PROGRAM_ID }} --url https://api.${{ env.NETWORK }}.solana.com
        env:
          ANCHOR_PROVIDER_URL: ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}

      - name: Cleanup Deploy Keypair
        if: always()
        run: rm -f deploy-keypair.json

      - name: Post Deployment Information
        if: success() && env.DEPLOYED_PROGRAM_ID != ''
        run: |
          echo "Deployment successful to Devnet!"
          echo "Program ID: ${{ env.DEPLOYED_PROGRAM_ID }}"
          echo "View on Solscan: https://solscan.io/account/${{ env.DEPLOYED_PROGRAM_ID }}?cluster=${{ env.NETWORK }}"