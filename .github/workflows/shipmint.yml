name: Anchor Build, Test and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SOLANA_VERSION: "1.18.4"
  ANCHOR_VERSION: "0.30.1"
  NODE_VERSION: "18"
  NETWORK: "devnet"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          solana --version

      - name: Install Anchor
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH # Ensure avm is in PATH
          avm use ${{ env.ANCHOR_VERSION }}
          anchor --version

      - name: Install JavaScript dependencies
        run: npm install

      - name: Build Program
        run: anchor build

      - name: Run Tests
        run: anchor test

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: program-artifacts
          path: |
            target/deploy/
            target/idl/
            Anchor.toml

  deploy-devnet:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: program-artifacts
          path: . # This will place target/deploy and target/idl in the root of the workspace.

      - name: Setup Node.js (for deploy job)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Solana CLI (for deploy job)
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          solana --version

      - name: Install Anchor (for deploy job)
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH # Ensure avm is in PATH
          avm use ${{ env.ANCHOR_VERSION }}
          anchor --version

      - name: Create Deploy Keypair
        run: echo "${{ secrets.DEPLOY_KEYPAIR }}" | base64 -d > deploy-keypair.json
        shell: bash

      - name: Configure Solana for Devnet
        run: |
          solana config set --url https://api.${{ env.NETWORK }}.solana.com
          solana config set --keypair deploy-keypair.json
          solana config get

      - name: Airdrop Devnet SOL
        run: |
          solana airdrop 5 -u ${{ env.NETWORK }} --keypair deploy-keypair.json || echo "Airdrop failed, continuing anyway (might be rate-limited or enough SOL already)."
        env:
          SOLANA_CLUSTER_URL: https://api.${{ env.NETWORK }}.solana.com
        continue-on-error: true # Airdrops can sometimes fail due to rate limits or already sufficient funds.

      - name: Deploy to Devnet
        run: |
          anchor deploy --provider.cluster ${{ env.NETWORK }}
        env:
          ANCHOR_PROVIDER_URL: ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}

      - name: Verify Deployment
        run: |
          echo "Verifying deployment by listing programs on ${{ env.NETWORK }}..."
          anchor programs list --cluster ${{ env.NETWORK }}

      - name: Cleanup Keypair
        if: always() # Ensure cleanup happens even if previous steps fail
        run: rm -f deploy-keypair.json

      - name: Post Deployment Info
        run: |
          echo "Deployment process completed."
          echo "Check the 'Deploy to Devnet' step output for program IDs and transaction details."