name: Anchor Build, Test and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SOLANA_VERSION: "1.18.4"
  ANCHOR_VERSION: "0.30.1"
  NODE_VERSION: "18"
  NETWORK: "devnet"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"

      - name: Add Solana to PATH
        run: echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Install Anchor
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          avm install ${{ env.ANCHOR_VERSION }}
          avm use ${{ env.ANCHOR_VERSION }}

      - name: Add Anchor to PATH
        run: echo "$HOME/.avm/bin" >> $GITHUB_PATH

      - name: Install JS Dependencies
        run: npm install

      - name: Build Program
        run: anchor build

      - name: Run Tests
        run: anchor test

      - name: Upload Program Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: program-artifacts
          path: target/deploy/

  deploy-devnet:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Program Artifacts
        uses: actions/download-artifact@v4
        with:
          name: program-artifacts
          path: target/deploy/

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"

      - name: Add Solana to PATH
        run: echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Install Anchor
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          avm install ${{ env.ANCHOR_VERSION }}
          avm use ${{ env.ANCHOR_VERSION }}

      - name: Add Anchor to PATH
        run: echo "$HOME/.avm/bin" >> $GITHUB_PATH

      - name: Create Deploy Keypair
        run: echo "${{ secrets.DEPLOY_KEYPAIR }}" | base64 -d > deploy_keypair.json
        shell: bash

      - name: Set Keypair Permissions
        run: chmod 600 deploy_keypair.json

      - name: Configure Solana Devnet
        run: |
          solana config set --url ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}
          solana config set --keypair deploy_keypair.json
        env:
          ANCHOR_PROVIDER_URL: ${{ secrets.ANCHOR_PROVIDER_URL }}

      - name: Airdrop Devnet SOL
        run: |
          SOLANA_AIRDROP_AMOUNT=2
          AIRDROP_ATTEMPTS=0
          MAX_AIRDROP_ATTEMPTS=5
          echo "Requesting airdrop of $SOLANA_AIRDROP_AMOUNT SOL..."
          solana airdrop $SOLANA_AIRDROP_AMOUNT deploy_keypair.json --url ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}

          while [[ $(solana balance deploy_keypair.json --url ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}) == *"0 SOL"* ]] && [ $AIRDROP_ATTEMPTS -lt $MAX_AIRDROP_ATTEMPTS ]; do
            echo "Waiting for airdrop... Attempt $((AIRDROP_ATTEMPTS + 1))/${MAX_AIRDROP_ATTEMPTS}"
            sleep 10
            solana airdrop $SOLANA_AIRDROP_AMOUNT deploy_keypair.json --url ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}
            AIRDROP_ATTEMPTS=$((AIRDROP_ATTEMPTS + 1))
          done

          if [[ $(solana balance deploy_keypair.json --url ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}) == *"0 SOL"* ]]; then
            echo "Failed to get airdrop after multiple attempts. Deployment might fail due to insufficient funds."
            exit 1
          else
            echo "Airdrop successful! Current balance:"
            solana balance deploy_keypair.json --url ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }}
          fi
        env:
          ANCHOR_PROVIDER_URL: ${{ secrets.ANCHOR_PROVIDER_URL }}

      - name: Deploy to Devnet
        run: anchor deploy --provider.cluster ${{ env.NETWORK }} --provider.wallet ./deploy_keypair.json
        env:
          ANCHOR_PROVIDER_URL: ${{ secrets.ANCHOR_PROVIDER_URL }}

      - name: Verify Deployment
        run: |
          echo "Deployment command executed. To fully verify, you might inspect the transaction signature or fetch program data."
          # Example: List programs associated with the wallet (might be noisy)
          # solana program show --url ${{ secrets.ANCHOR_PROVIDER_URL || format('https://api.{0}.solana.com', env.NETWORK) }} deploy_keypair.json
          # Example: Fetch IDL of the deployed program (requires knowing program ID)
          # anchor idl fetch <PROGRAM_ID> --provider.cluster ${{ env.NETWORK }}

      - name: Cleanup Keypair
        if: always()
        run: rm -f deploy_keypair.json

      - name: Post Deployment Info
        run: |
          echo "Deployment workflow completed for devnet."
          echo "You can check the transaction on Solana Explorer using the signature from the 'Deploy to Devnet' step."
          echo "Make sure to save your Program ID after initial deployment if you need it for client-side applications."